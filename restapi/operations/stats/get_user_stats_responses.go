// Code generated by go-swagger; DO NOT EDIT.

package stats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ildomm/linx_challenge/models"
)

// GetUserStatsOKCode is the HTTP code returned for type GetUserStatsOK
const GetUserStatsOKCode int = 200

/*GetUserStatsOK Successful operation

swagger:response getUserStatsOK
*/
type GetUserStatsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Stats `json:"body,omitempty"`
}

// NewGetUserStatsOK creates GetUserStatsOK with default headers values
func NewGetUserStatsOK() *GetUserStatsOK {

	return &GetUserStatsOK{}
}

// WithPayload adds the payload to the get user stats o k response
func (o *GetUserStatsOK) WithPayload(payload *models.Stats) *GetUserStatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user stats o k response
func (o *GetUserStatsOK) SetPayload(payload *models.Stats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserStatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetUserStatsDefault error

swagger:response getUserStatsDefault
*/
type GetUserStatsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewGetUserStatsDefault creates GetUserStatsDefault with default headers values
func NewGetUserStatsDefault(code int) *GetUserStatsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUserStatsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get user stats default response
func (o *GetUserStatsDefault) WithStatusCode(code int) *GetUserStatsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get user stats default response
func (o *GetUserStatsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get user stats default response
func (o *GetUserStatsDefault) WithPayload(payload *models.GeneralError) *GetUserStatsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user stats default response
func (o *GetUserStatsDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserStatsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
