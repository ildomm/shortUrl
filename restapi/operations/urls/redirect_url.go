// Code generated by go-swagger; DO NOT EDIT.

package urls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RedirectURLHandlerFunc turns a function with the right signature into a redirect Url handler
type RedirectURLHandlerFunc func(RedirectURLParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RedirectURLHandlerFunc) Handle(params RedirectURLParams) middleware.Responder {
	return fn(params)
}

// RedirectURLHandler interface for that can handle valid redirect Url params
type RedirectURLHandler interface {
	Handle(RedirectURLParams) middleware.Responder
}

// NewRedirectURL creates a new http.Handler for the redirect Url operation
func NewRedirectURL(ctx *middleware.Context, handler RedirectURLHandler) *RedirectURL {
	return &RedirectURL{Context: ctx, Handler: handler}
}

/*RedirectURL swagger:route GET /urls/{id} urls redirectUrl

Get a Url redirection

Get a Url redirection

*/
type RedirectURL struct {
	Context *middleware.Context
	Handler RedirectURLHandler
}

func (o *RedirectURL) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRedirectURLParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
